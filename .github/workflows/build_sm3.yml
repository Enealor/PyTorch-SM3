name: Build PyTorch-SM3

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  create:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r build-requirements.txt
    - name: Lint with flake8
      run: flake8 ./src ./tests setup.py --count --show-source --statistics
    - name: Build with setuptools
      run: python setup.py sdist bdist_wheel
    - name: Upload artifacts (tarball and wheel)
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: ./dist/

  test:
    runs-on: ubuntu-18.04
    needs: build
    strategy:
      matrix:
        python-version: [3.7, 3.8]
        pytorch-version: [1.4.0, 1.5.0]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --find-links=https://download.pytorch.org/whl/torch_stable.html torch==${{ matrix.pytorch-version }}+cpu
        pip install -r requirements.txt
    - name: Retrieve artifact
      uses: actions/download-artifact@v2
      with:
        name: binaries
        path: ./dist
    - name: Install new SM3 binary
      run: pip install ./dist/torch_SM3-*-py3-none-any.whl
    - name: Test with pytest
      run: |
        pip install pytest==5.4.3
        pytest

  publish:
    runs-on: ubuntu-18.04
    needs: test
    if: startsWith(github.ref, 'refs/tags')
    steps:
    - name: Retrieve artifact
      uses: actions/download-artifact@v2
      with:
        name: binaries
        path: ./dist
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.3.1
      with:
        password: ${{ secrets.TEST_PYPI_PASSWORD }}
        repository_url: https://test.pypi.org/legacy/
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: true
        prerelease: false
